name: Update Contributors (API-only)

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 9 * * 1"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-contributors:
    runs-on: ubuntu-latest
    env:
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build contributors markdown (via REST API)
        id: build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = process.env.OWNER;
            const repo  = process.env.REPO;
            const columnsPerRow = 6;
            const avatarSize    = 80;
            const excludeBots   = true;

            // Paginación de contribuidores
            let page = 1;
            const per_page = 100;
            let all = [];
            for (;;) {
              const { data } = await github.request('GET /repos/{owner}/{repo}/contributors', {
                owner, repo, per_page, page
              });
              core.info('Fetched page ' + page + ' with ' + data.length + ' contributors');
              if (!data || data.length === 0) break;
              all = all.concat(data);
              page++;
            }

            if (excludeBots) {
              all = all.filter(u =>
                !(u.type === 'Bot') &&
                !(u.login && u.login.toLowerCase().includes('bot')) &&
                u.login !== 'dependabot' && u.login !== 'dependabot[bot]'
              );
            }

            function chunk(arr, size) {
              const out = [];
              for (let i = 0; i < arr.length; i += size) out.push(arr.slice(i, i + size));
              return out;
            }

            const rows = chunk(all, columnsPerRow);
            let md = '\n<table>\n  <tbody>\n';
            for (const row of rows) {
              md += '    <tr>\n';
              for (const u of row) {
                const login  = u.login;
                const html   = (u.html_url ? u.html_url : ('https://github.com/' + login));
                const avatar = (u.avatar_url ? u.avatar_url : ('https://github.com/' + login + '.png')) + '?size=' + avatarSize;

                md += '      <td align="center" valign="top" style="padding:8px;">\n' +
                      '        <a href="' + html + '">\n' +
                      '          <img src="' + avatar + '" width="' + avatarSize + '" height="' + avatarSize + '" style="border-radius:50%;" alt="' + login + '" />\n' +
                      '          <br/>\n' +
                      '          <sub><b>' + login + '</b></sub>\n' +
                      '        </a>\n' +
                      '      </td>\n';
              }
              md += '    </tr>\n';
            }
            md += '  </tbody>\n</table>\n';

            const fs = require('fs');
            const path = 'README.md';
            if (!fs.existsSync(path)) {
              core.setFailed('README.md no existe en la raíz del repo.');
              return;
            }
            const start = '<!-- CONTRIBUTORS:START -->';
            const end   = '<!-- CONTRIBUTORS:END -->';
            let readme = fs.readFileSync(path, 'utf8');

            const regex = new RegExp(start + '[\\s\\S]*?' + end, 'm');
            if (!regex.test(readme)) {
              core.setFailed('No se encontraron los marcadores <!-- CONTRIBUTORS:START --> / <!-- CONTRIBUTORS:END --> en README.md');
              return;
            }
            const newBlock = start + '\n' + md + end;
            readme = readme.replace(regex, newBlock);
            fs.writeFileSync(path, readme, 'utf8');
            core.info('README actualizado entre marcadores.');

      - name: Create branch, commit and push
        run: |
          set -e
          BRANCH="docs/update-contributors-$(date +%Y%m%d%H%M%S)"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if git diff --quiet; then
            echo "No hay cambios en README.md"
            exit 0
          fi

          git checkout -b "$BRANCH"
          git add README.md
          git commit -m "docs(contributors): update README contributors via API"
          git push -u origin "$BRANCH"

      - name: Open PR with GitHub CLI (gh)
        if: ${{ success() }}
        run: |
          gh pr create \
            --title "docs(readme): update contributors (API-based)" \
            --body  "Auto-generated via REST API (no third-party action). Updates the Contributors section between markers." \
            --base  main \
            --head  "$BRANCH"
